// <auto-generated />
using LinQTraining.LinqExtensions;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LinQTraining.LinQExtensions.Migrations
{
    [DbContext(typeof(LinQContext))]
    [Migration("20230127034758_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LinQTraining.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = "apple",
                            CategoryId = "fruit",
                            Name = "apple"
                        },
                        new
                        {
                            Id = "banana",
                            CategoryId = "fruit",
                            Name = "banana"
                        },
                        new
                        {
                            Id = "orange",
                            CategoryId = "fruit",
                            Name = "orange"
                        },
                        new
                        {
                            Id = "grape",
                            CategoryId = "fruit",
                            Name = "grape"
                        },
                        new
                        {
                            Id = "mango",
                            CategoryId = "fruit",
                            Name = "mango"
                        },
                        new
                        {
                            Id = "television",
                            CategoryId = "electronic",
                            Name = "television"
                        },
                        new
                        {
                            Id = "laptop",
                            CategoryId = "electronic",
                            Name = "laptop"
                        },
                        new
                        {
                            Id = "keyboard",
                            CategoryId = "electronic",
                            Name = "keyboard"
                        },
                        new
                        {
                            Id = "monitor",
                            CategoryId = "electronic",
                            Name = "monitor"
                        },
                        new
                        {
                            Id = "knife",
                            CategoryId = "household",
                            Name = "knife"
                        },
                        new
                        {
                            Id = "spoon",
                            CategoryId = "household",
                            Name = "spoon"
                        },
                        new
                        {
                            Id = "bowl",
                            CategoryId = "household",
                            Name = "bowl"
                        },
                        new
                        {
                            Id = "chopsticks",
                            CategoryId = "household",
                            Name = "chopsticks"
                        });
                });

            modelBuilder.Entity("LinQTraining.ProductCategory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = "fruit",
                            Name = "fruit"
                        },
                        new
                        {
                            Id = "electronic",
                            Name = "electronic"
                        },
                        new
                        {
                            Id = "household",
                            Name = "household"
                        },
                        new
                        {
                            Id = "misc",
                            Name = "misc"
                        });
                });

            modelBuilder.Entity("LinQTraining.Product", b =>
                {
                    b.HasOne("LinQTraining.ProductCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LinQTraining.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
